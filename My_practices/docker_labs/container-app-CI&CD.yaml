# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1c1650a1-28cf-46d9-9362-e15ddd94158c'
  imageRepository: 'webappimg'
  containerRegistry: 'deployappreg.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/My_practices/docker_labs/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: DEV
  displayName: DEV Container Instance
  jobs:
  - job: dev
    displayName: Deploy to dev Container Instance
    steps:
     - task: AzureCLI@2
       displayName: 'Azure CLI'
       inputs:
         azureSubscription: 'webapp'
         scriptType: pscore
         scriptLocation: inlineScript
         inlineScript: |
             az container create -g deployAppRG --name webapp-con-dev --image deployappreg.azurecr.io/webappimg:$(Build.BuildId) --dns-name-label usman-webapp-dev --cpu 1 --memory 1 --registry-login-server deployappreg.azurecr.io --registry-username deployappreg --registry-password 84ZHDlbY+v8JYirWupKRppOqVmA4mOqfNTKmNZchPu+ACRDKNn18  --ports 80
- stage: QA
  displayName: QA Container Instance
  jobs:
  - job: QA
    displayName: Deploy to qa Container Instance
    steps:
     - task: AzureCLI@2
       displayName: 'Azure CLI'
       inputs:
         azureSubscription: 'webapp'
         scriptType: pscore
         scriptLocation: inlineScript
         inlineScript: |
             az container create -g deployAppRG --name webapp-con-qa --image deployappreg.azurecr.io/webappimg:$(Build.BuildId) --dns-name-label usman-webapp-qa --cpu 1 --memory 1 --registry-login-server deployappreg.azurecr.io --registry-username deployappreg --registry-password 84ZHDlbY+v8JYirWupKRppOqVmA4mOqfNTKmNZchPu+ACRDKNn18  --ports 80